name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub/Registry
        # Ensure DOCKER_USERNAME and DOCKER_PASSWORD secrets are set in your repository
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        # Builds a Docker image tagged as cygnetops/react-test using Dockerfile.dev
        run: docker build -t cygnetops/react-test -f Dockerfile.dev .

      - name: Run tests in Docker container
        # Runs tests using the built Docker image. CI=true is often used to run tests in non-interactive mode.
        run: docker run -e CI=true cygnetops/react-test npm test

      - name: Generate deployment package
        # Creates a zip file named deploy.zip containing all files in the current directory,
        # excluding the .git directory and its contents.
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to AWS Elastic Beanstalk
        # Uses the einaregilsson/beanstalk-deploy action, updated to version v21
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          application_name: frontend # Name of your Elastic Beanstalk application
          environment_name: Frontend-env # Name of your Elastic Beanstalk environment
          existing_bucket_name: elasticbeanstalk-eu-north-1-395826538103 # S3 bucket used by Elastic Beanstalk
          region: eu-north-1 # AWS region of your Elastic Beanstalk environment
          version_label: ${{ github.sha }} # Uses the commit SHA as the version label for the deployment
          deployment_package: deploy.zip # The zip file to deploy
        env:
          # These secrets must be configured in your GitHub repository settings
          # under Settings > Secrets and variables > Actions
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
